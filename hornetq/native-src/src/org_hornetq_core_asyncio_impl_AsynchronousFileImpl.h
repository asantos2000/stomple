/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_hornetq_core_asyncio_impl_AsynchronousFileImpl */

#ifndef _Included_org_hornetq_core_asyncio_impl_AsynchronousFileImpl
#define _Included_org_hornetq_core_asyncio_impl_AsynchronousFileImpl
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: log */
/* Inaccessible static: totalMaxIO */
/* Inaccessible static: loaded */
/* Inaccessible static: EXPECTED_NATIVE_VERSION */
/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    resetBuffer
 * Signature: (Ljava/nio/ByteBuffer;I)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_resetBuffer
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    destroyBuffer
 * Signature: (Ljava/nio/ByteBuffer;)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_destroyBuffer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    setNanoSleepInterval
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_setNanoSleepInterval
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    nanoSleep
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_nanoSleep
  (JNIEnv *, jclass);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    newNativeBuffer
 * Signature: (J)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_newNativeBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    init
 * Signature: (Ljava/lang/String;ILorg/hornetq/core/logging/Logger;)J
 */
JNIEXPORT jlong JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_init
  (JNIEnv *, jclass, jstring, jint, jobject);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    size0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_size0
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    write
 * Signature: (JJJJLjava/nio/ByteBuffer;Lorg/hornetq/core/asyncio/AIOCallback;)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_write
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jobject, jobject);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    read
 * Signature: (JJJLjava/nio/ByteBuffer;Lorg/hornetq/core/asyncio/AIOCallback;)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_read
  (JNIEnv *, jobject, jlong, jlong, jlong, jobject, jobject);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    fill
 * Signature: (JJIJB)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_fill
  (JNIEnv *, jclass, jlong, jlong, jint, jlong, jbyte);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    closeInternal
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_closeInternal
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    stopPoller
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_stopPoller
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    getNativeVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_getNativeVersion
  (JNIEnv *, jclass);

/*
 * Class:     org_hornetq_core_asyncio_impl_AsynchronousFileImpl
 * Method:    internalPollEvents
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_hornetq_core_asyncio_impl_AsynchronousFileImpl_internalPollEvents
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
